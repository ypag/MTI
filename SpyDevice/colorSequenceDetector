import imgproc
from imgproc import *
import os


# open a webcam to take pictures
camera = Camera(160, 120)

# Open a viewer window to display images


previouspreviousColor =-3
# Color captured previous to previous attempt
previousColor=-2
# color captured in previous attempt
currentColor = -1
# color captured in current attempt
redId =10
greenId =11
blueId =12




for i in range(3):
	viewer = Viewer(160, 120, "The first step")
	# take a picture from the camera
	#size is reduced to increase the processing speen in next steps
	img = camera.grabImage()

	# display the image in the viewer
	viewer.displayImage(img)

	redCounter=0
	greenCounter=0
	blueCounter=0
	# iterate over each pixel in the image
	for x in range(0, img.width):
		for y in range(0, img.height):
			# Get the value at the xth column and yth row, place the intensities into variables
			red, green, blue = img[x, y]

			

			# test to find which colour is dominant
			if red > green and red > blue:
				# Red is dominant, so set the pixel to completely red
				redCounter+=1
				
			elif green > red and green > blue:
				greenCounter+=1
				
			else:
				# if red or green isn't dominant, blue must be
				blueCounter+=1
			


	m=max(redCounter,greenCounter,blueCounter)

	previouspreviousColor=previousColor

	previousColor=currentColor
	
	print(redCounter)
	print(greenCounter)
	print(blueCounter)

	if m==redCounter:
		domcolor = 0
		currentColor = redId

		print "red"

	elif m==greenCounter:
		domColor= 1
		currentColor= greenId
		print "green"
	elif m==blueCounter:
		domColor= 2
		currentColor = blueId
		print "blue"
	else:
		domColor=0


	#for x in range(0, img.width):
		#for y in range(0, img.height):
			#base=[0,0,0]
			#base[domColor]=255
			#the whole picture turns into the dominant color
			#img[x,y]= base

	if previouspreviousColor == redId and previousColor == redId and currentColor == redId :
		os.system('mpg321 /home/pi/camera/secretMessage.mp3')
		# if three seccessive red palletts are detected, play the audio file
		print "sequence detected"
	# display the image again
	#viewer.displayImage(img)
	
	

	# delay for 5000 milliseconds to give us time to see the changes, then exit
	waitTime(5000)


# end of the script
